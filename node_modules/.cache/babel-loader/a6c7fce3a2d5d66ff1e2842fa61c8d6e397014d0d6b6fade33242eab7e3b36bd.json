{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sharaga\\\\Engineering\\\\Tetris\\\\src\\\\components\\\\Board.js\";\nimport React from 'react';\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  board,\n  currentPiece,\n  gameOver\n}) {\n  const renderBoard = () => {\n    const displayBoard = board.map(row => [...row]);\n\n    // Add current piece to the display board\n    if (currentPiece) {\n      for (let y = 0; y < currentPiece.shape.length; y++) {\n        for (let x = 0; x < currentPiece.shape[y].length; x++) {\n          if (currentPiece.shape[y][x]) {\n            const boardY = currentPiece.position.y + y;\n            const boardX = currentPiece.position.x + x;\n            if (boardY >= 0 && boardY < board.length && boardX >= 0 && boardX < board[0].length) {\n              displayBoard[boardY][boardX] = currentPiece.color;\n            }\n          }\n        }\n      }\n    }\n    return displayBoard;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `board ${gameOver ? 'game-over' : ''}`,\n    children: renderBoard().map((row, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, x) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        style: {\n          backgroundColor: cell || '#1a1a1a'\n        }\n      }, `${y}-${x}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, y, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Board","board","currentPiece","gameOver","renderBoard","displayBoard","map","row","y","shape","length","x","boardY","position","boardX","color","className","children","cell","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sharaga/Engineering/Tetris/src/components/Board.js"],"sourcesContent":["import React from 'react';\r\nimport './Board.css';\r\n\r\nfunction Board({ board, currentPiece, gameOver }) {\r\n  const renderBoard = () => {\r\n    const displayBoard = board.map(row => [...row]);\r\n\r\n    // Add current piece to the display board\r\n    if (currentPiece) {\r\n      for (let y = 0; y < currentPiece.shape.length; y++) {\r\n        for (let x = 0; x < currentPiece.shape[y].length; x++) {\r\n          if (currentPiece.shape[y][x]) {\r\n            const boardY = currentPiece.position.y + y;\r\n            const boardX = currentPiece.position.x + x;\r\n            if (boardY >= 0 && boardY < board.length && boardX >= 0 && boardX < board[0].length) {\r\n              displayBoard[boardY][boardX] = currentPiece.color;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return displayBoard;\r\n  };\r\n\r\n  return (\r\n    <div className={`board ${gameOver ? 'game-over' : ''}`}>\r\n      {renderBoard().map((row, y) => (\r\n        <div key={y} className=\"row\">\r\n          {row.map((cell, x) => (\r\n            <div\r\n              key={`${y}-${x}`}\r\n              className=\"cell\"\r\n              style={{ backgroundColor: cell || '#1a1a1a' }}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,KAAKA,CAAC;EAAEC,KAAK;EAAEC,YAAY;EAAEC;AAAS,CAAC,EAAE;EAChD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,YAAY,GAAGJ,KAAK,CAACK,GAAG,CAACC,GAAG,IAAI,CAAC,GAAGA,GAAG,CAAC,CAAC;;IAE/C;IACA,IAAIL,YAAY,EAAE;MAChB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,YAAY,CAACO,KAAK,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;QAClD,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,YAAY,CAACO,KAAK,CAACD,CAAC,CAAC,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;UACrD,IAAIT,YAAY,CAACO,KAAK,CAACD,CAAC,CAAC,CAACG,CAAC,CAAC,EAAE;YAC5B,MAAMC,MAAM,GAAGV,YAAY,CAACW,QAAQ,CAACL,CAAC,GAAGA,CAAC;YAC1C,MAAMM,MAAM,GAAGZ,YAAY,CAACW,QAAQ,CAACF,CAAC,GAAGA,CAAC;YAC1C,IAAIC,MAAM,IAAI,CAAC,IAAIA,MAAM,GAAGX,KAAK,CAACS,MAAM,IAAII,MAAM,IAAI,CAAC,IAAIA,MAAM,GAAGb,KAAK,CAAC,CAAC,CAAC,CAACS,MAAM,EAAE;cACnFL,YAAY,CAACO,MAAM,CAAC,CAACE,MAAM,CAAC,GAAGZ,YAAY,CAACa,KAAK;YACnD;UACF;QACF;MACF;IACF;IAEA,OAAOV,YAAY;EACrB,CAAC;EAED,oBACEN,OAAA;IAAKiB,SAAS,EAAE,SAASb,QAAQ,GAAG,WAAW,GAAG,EAAE,EAAG;IAAAc,QAAA,EACpDb,WAAW,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACxBT,OAAA;MAAaiB,SAAS,EAAC,KAAK;MAAAC,QAAA,EACzBV,GAAG,CAACD,GAAG,CAAC,CAACY,IAAI,EAAEP,CAAC,kBACfZ,OAAA;QAEEiB,SAAS,EAAC,MAAM;QAChBG,KAAK,EAAE;UAAEC,eAAe,EAAEF,IAAI,IAAI;QAAU;MAAE,GAFzC,GAAGV,CAAC,IAAIG,CAAC,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGjB,CACF;IAAC,GAPMhB,CAAC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQN,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GArCQzB,KAAK;AAuCd,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}